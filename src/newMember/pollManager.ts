import { Composer, GrammyError } from "grammY";

export const newMemberPoll = new Composer();

// Fonction pour cr√©er le sc√©nario d'ajout
newMemberPoll.on("chat_join_request", async (ctx) => {
  const user = ctx.chatJoinRequest.from;
  const chatId = ctx.chatJoinRequest.chat.id;

  //Constition du sondage
  const question =
    `üÜï Nouvelle demande ‚Üí ${user.first_name} souhaite se joindre √† nous ! Souhaitez-vous l'int√©grer √† l'√©v√©nement ?`;

  const pollOptions = [
    "‚úÖ Oui, pas de soucis !",
    "üö´ Non, je ne souhaite pas",
    "‚ùî Ne connait pas / se prononce pas",
  ];

  // Constitution du lien de pr√©sentation
  const userLink = `https://t.me/${user.username || user.id}`;
  const specialChar = "\u2060"; // Utiliser le caract√®re sp√©cial
  const message = `[${specialChar}](${userLink})`;

  //Constitution du message priv√© envoy√© √† l'√©metteur de la demande
  const joinConfirmationMessage = `Bonjour {${user.first_name}},
  Je suis BotBar, et je m'occupe du groupe du FurBar Toulouse. Si tu re√ßois ce message, c'est pour te confirmer que ta demande pour nous rejoindre a bien √©t√© prise en compte. Un sondage a √©t√© cr√©√© pour approuver ton adh√©sion. Tu seras inform√© des r√©sultats sous peu.
  Merci pour ta patience !`;

  // Envoi du sondage et lien de pr√©sentation dans le groupe
  // deno-lint-ignore prefer-const
  let pollMessage;
  // @ts-ignore (Const can be applied as parameter)
  pollMessage = await ctx.api.sendPoll(chatId, question, pollOptions, {
    is_anonymous: true,
  });

  await ctx.api.sendMessage(chatId, message, {
    parse_mode: "Markdown",
    link_preview_options: { show_above_text: true },
  });

  // Envoi du message de confirmation √† l'√©metteur de la demande
  try {
    await ctx.api.sendMessage(user.id, joinConfirmationMessage);
    console.log(`Message priv√© envoy√© √† ${user.first_name}.`);
  } catch (err) {
    if (err instanceof GrammyError) {
      console.error("Erreur lors de l'envoi du message priv√©:", err);
    } else {
      console.error("Erreur inconnue lors de l'envoi du message priv√©:", err);
    }
  }

  console.log(
    `Sondage cr√©√© pour ${user.first_name} avec l'ID: ${pollMessage.poll.id}`,
  );

  setTimeout(async () => {
    try {
      await ctx.api.stopPoll(chatId, pollMessage.message_id);
      console.log("Sondage ferm√© avec l'ID: ", pollMessage.poll.id);
    } catch (err) {
      if (err instanceof GrammyError) {
        console.error("Grammy error:", err);
      } else {
        console.error("Unknow Error:", err);
      }
    }
  }, 86400000); //24 heures
});
